<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="500,1045" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Data.SqlClient</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="MSSQL_BulkCopy.xaml&#xA;Author: https://github.com/crystalyun&#xD;&#xA;Repository: https://github.com/rpahero/uipath-reusable-components&#xA;Description: Invokes VB.NET code to insert all rows from a UiPath Datatable into a MS SQL Database using SqlBulkCopy&#xA;&#xA;Namespace Imports:&#xA;System.Data.SqlClient&#xA;&#xA;Arguments:&#xA;- in_str_DatabaseConnection: the database connection string&#xA;- in_int_BatchSize: the batch size to be used (50 is a good starting point)&#xA;- in_dict_ColumnMap: a Dictionary(String,String) of column mappings with Key = origin column name, Value = destination column name.  Include these even if column names are identical.&#xA;- in_str_TableName: the name of database table that records will be inserted into&#xA;- in_dt_SourceData: the Datatable to be inserted&#xA;- out_str_ExceptionMsg: the exception message generated by the SqlBulkCopy operation&#xA;- out_int_RowsInserted: the number of rows successfully inserted&#xA;&#xA;Throws:&#xA;- System.Exception: If any error occurs inside the invoked VB.NET code, print the corresponding InnerException or SqlBulkCopy exception messages.&#xA;&#xA;Outcome:&#xA;- Success: All records successfully inserted, with number of records inserted as output.&#xA;- Failure: Records not inserted or only partially inserted, with corresponding exception messages and number of records inserted as output." DisplayName="MSSQL_BulkCopy" sap:VirtualizedContainerService.HintSize="480,945" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,391" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:String" Name="out_str_ExceptionMsg" />
        <Variable x:TypeArguments="x:Int32" Name="out_int_RowsInserted" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="'SqlBulkCopy.vb&#xA;'Author: https://github.com/crystalyun&#xA;'Description: This VB.net code inserts all rows from a UiPath Datatable into a MS SQL Database using SqlBulkCopy&#xA;&#xA;'Arguments:&#xA;'in_str_DatabaseConnection: the database connection string&#xA;'in_int_BatchSize: the batch size to be used (50 is a good starting point)&#xA;'in_dict_ColumnMap: a dictionary of column mappings with key = origin column name, value = destination column name.  Include these even if column names are identical.&#xA;'in_str_TableName: the name of table that records will be inserted into&#xA;'in_dt_SourceData: the datatable to be inserted&#xA;'out_str_ExceptionMsg: the exception message generated by the SqlBulkCopy operation&#xA;'out_int_RowsInserted: the number of rows successfully inserted&#xA;&#xA;Using dbConnection As New SqlConnection(in_str_DatabaseConnection)&#xA;    dbConnection.Open()&#xA;    Using rowCount As New SqlCommand(&quot;SELECT COUNT(*) FROM dbo.&quot; + in_str_TableName + &quot;;&quot;, dbConnection)&#xA;    &#x9;Dim rowStart As Int32 = System.Convert.ToInt32(rowCount.ExecuteScalar())&#xA;&#x9;    Using dbCopy As New SqlBulkCopy(dbConnection)&#xA;&#x9;        dbCopy.BatchSize = in_int_BatchSize&#xA;            For Each entry As KeyValuePair(Of String, String) In in_dict_ColumnMap&#xA;&#x9;            dbCopy.ColumnMappings.Add(entry.Key, entry.Value)&#xA;&#x9;        Next&#xA;&#x9;        dbCopy.DestinationTableName = in_str_TableName&#xA;            Try&#xA;                dbCopy.WriteToServer(in_dt_SourceData)&#xA;            Catch ex As Exception&#xA;                out_str_ExceptionMsg = ex.Message&#xA;            Finally&#xA;                dbCopy.Close()&#xA;            End Try&#xA;&#x9;    End Using&#xA;&#x9;    Dim rowEnd As Int32 = System.Convert.ToInt32(rowCount.ExecuteScalar())&#xA;&#x9;    out_int_RowsInserted = rowEnd - rowStart&#xA;&#x9;End Using&#xA;    dbConnection.Close()&#xA;End Using" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
          <ui:InvokeCode.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="in_str_DatabaseConnection" />
            <InArgument x:TypeArguments="x:Int32" x:Key="in_int_BatchSize">50</InArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_dict_ColumnMap" />
            <InArgument x:TypeArguments="x:String" x:Key="in_str_TableName" />
            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_SourceData" />
            <OutArgument x:TypeArguments="x:String" x:Key="out_str_ExceptionMsg">[out_str_ExceptionMsg]</OutArgument>
            <OutArgument x:TypeArguments="x:Int32" x:Key="out_int_RowsInserted">[out_int_RowsInserted]</OutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Throw Exception="[New SystemException(&quot;Failed to insert records into database using SqlBulkCopy.  Exception details: &quot; + exception.InnerException.Message + vbNewLine + out_str_ExceptionMsg)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>